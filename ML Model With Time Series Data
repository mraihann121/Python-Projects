import numpy as np
import pandas as pd
from keras.layers import Dense, LSTM
import matplotlib.pyplot as plt
import tensorflow as tf
from sklearn.model_selection import train_test_split

df = pd.read_csv('DailyDelhiClimateTrain.csv') #download this file at https://github.com/mraihann121/Python-Projects
df.head()
# df.info()

dates = df['date'].values
temp  = df['meantemp'].values
 
dates_latih, dates_test, temp_latih, temp_test = train_test_split(dates, temp, test_size=0.2)
 
plt.figure(figsize=(15,5))
plt.plot(dates, temp)
plt.title('Temperature average',
          fontsize=20);

def windowed_dataset(series, window_size, batch_size, shuffle_buffer):
    series = tf.expand_dims(series, axis=-1)
    ds = tf.data.Dataset.from_tensor_slices(series)
    ds = ds.window(window_size + 1, shift=1, drop_remainder=True)
    ds = ds.flat_map(lambda w: w.batch(window_size + 1))
    ds = ds.shuffle(shuffle_buffer)
    ds = ds.map(lambda w: (w[:-1], w[-1:]))
    return ds.batch(batch_size).prefetch(1)

train_set = windowed_dataset(temp_latih, window_size=50, batch_size=200, shuffle_buffer=1000)
model = tf.keras.models.Sequential([
  tf.keras.layers.LSTM(50, return_sequences=True),
  tf.keras.layers.LSTM(50),
  tf.keras.layers.Dense(25, activation="relu"),
  # tf.keras.layers.Dropout(0.2),
  tf.keras.layers.Dense(8, activation="relu"),
  # tf.keras.layers.Dropout(0.2),
  tf.keras.layers.Dense(8, activation="relu"),
  tf.keras.layers.Dense(1),
])

optimizer = tf.keras.optimizers.SGD(lr=1.0000e-04, momentum=0.9)
model.compile(loss=tf.keras.losses.Huber(),
              optimizer=optimizer,
              metrics=["mae"])
history = model.fit(train_set,epochs=200)
